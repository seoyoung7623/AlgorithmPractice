#  **************************************************************************  #
#                                                                              #
#                                                       :::    :::    :::      #
#    Problem Number: 5557                              :+:    :+:      :+:     #
#                                                     +:+    +:+        +:+    #
#    By: seoyoung7623 <boj.kr/u/seoyoung7623>        +#+    +#+          +#+   #
#                                                   +#+      +#+        +#+    #
#    https://boj.kr/5557                           #+#        #+#      #+#     #
#    Solved: 2025/05/03 17:32:39 by seoyoung7623  ###          ###   ##.kr     #
#                                                                              #
#  **************************************************************************  #
'''
만들수있는 등식의 개수
덧셈과 뺄셈

힌트 봄 DP..?
아 마지막 2숫자 사이에만 =를 넣음
왜 DP일까.....

+,- 2개의 계산을 해야하는데 중복되는 부분이 있다. 바로 앞에 값이 중복됨
중복되는 수를 DP로 계산하는 방법

8+3 11
8-3 5

11+2 13
11-2 9
5+2 7
5-2 3

13+4=17
9-4=5

2차원 리스트 DP
dp[i][j]는 뜻:
➝ i번째 숫자까지 계산했을 때, 결과가 j가 되는 경우의 수
'''
N = int(input())
nums = list(map(int,input().split()))

dp = [[0]*21 for _ in range(N-1)]
dp[0][nums[0]] = 1

for i in range(1,N-1): #nums
    for j in range(21): #현재까지 온 수에서 num만큼 +/-
        if dp[i-1][j]:
            if 0<=j+nums[i]<=20:
                dp[i][j+nums[i]] += dp[i-1][j] # += 1
            if 0<=j-nums[i]<=20:
                dp[i][j-nums[i]] += dp[i-1][j]

print(dp[N-2][nums[-1]])




